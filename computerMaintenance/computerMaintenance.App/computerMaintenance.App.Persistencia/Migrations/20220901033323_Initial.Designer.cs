// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using computerMaintenance.App.Persistencia;

namespace computerMaintenance.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220901033323_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("computerMaintenance.App.Dominio.GestionarServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<int?>("NuevaSolicitudId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("NuevaSolicitudId");

                    b.ToTable("tablaGestionarServicio");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.HistoriaCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("NuevaSolicitudId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NuevaSolicitudId");

                    b.ToTable("tablaHistoriaCliente");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.HistoriaTecnico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("NuevaSolicitudId")
                        .HasColumnType("int");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NuevaSolicitudId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("HistoriaTecnico");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.NuevaSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TecnicoId");

                    b.ToTable("tablaNuevaSolicitud");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("nroIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tablaPersona");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.Administrador", b =>
                {
                    b.HasBaseType("computerMaintenance.App.Dominio.Persona");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Administrador_Ciudad");

                    b.Property<string>("usuarioAdministrador")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.Cliente", b =>
                {
                    b.HasBaseType("computerMaintenance.App.Dominio.Persona");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TecnicoId")
                        .HasColumnType("int");

                    b.HasIndex("TecnicoId");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.Tecnico", b =>
                {
                    b.HasBaseType("computerMaintenance.App.Dominio.Persona");

                    b.Property<string>("nroTarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Tecnico");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.GestionarServicio", b =>
                {
                    b.HasOne("computerMaintenance.App.Dominio.Administrador", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorId");

                    b.HasOne("computerMaintenance.App.Dominio.NuevaSolicitud", "NuevaSolicitud")
                        .WithMany()
                        .HasForeignKey("NuevaSolicitudId");

                    b.Navigation("Administrador");

                    b.Navigation("NuevaSolicitud");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.HistoriaCliente", b =>
                {
                    b.HasOne("computerMaintenance.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("computerMaintenance.App.Dominio.NuevaSolicitud", "NuevaSolicitud")
                        .WithMany()
                        .HasForeignKey("NuevaSolicitudId");

                    b.Navigation("Cliente");

                    b.Navigation("NuevaSolicitud");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.HistoriaTecnico", b =>
                {
                    b.HasOne("computerMaintenance.App.Dominio.NuevaSolicitud", "NuevaSolicitud")
                        .WithMany()
                        .HasForeignKey("NuevaSolicitudId");

                    b.HasOne("computerMaintenance.App.Dominio.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId");

                    b.Navigation("NuevaSolicitud");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.NuevaSolicitud", b =>
                {
                    b.HasOne("computerMaintenance.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("computerMaintenance.App.Dominio.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId");

                    b.Navigation("Cliente");

                    b.Navigation("Tecnico");
                });

            modelBuilder.Entity("computerMaintenance.App.Dominio.Cliente", b =>
                {
                    b.HasOne("computerMaintenance.App.Dominio.Tecnico", "Tecnico")
                        .WithMany()
                        .HasForeignKey("TecnicoId");

                    b.Navigation("Tecnico");
                });
#pragma warning restore 612, 618
        }
    }
}
